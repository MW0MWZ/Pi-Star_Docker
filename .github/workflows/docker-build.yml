name: Build Multi-Platform Docker Images

on:
  push:
    branches: [main]
    paths: 
      - 'mmdvmhost/**'
      - 'dapnetgateway/**'
  pull_request:
    branches: [main]
    paths:
      - 'mmdvmhost/**' 
      - 'dapnetgateway/**'
  repository_dispatch:
    types: [upstream-change]

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [mmdvmhost, dapnetgateway]
    
    steps:
      - name: Check if should build this service
        id: should_build
        run: |
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            if [ "${{ matrix.service }}" == "${{ github.event.client_payload.service }}" ]; then
              echo "should_build=true" >> $GITHUB_OUTPUT
              echo "Building ${{ matrix.service }} due to upstream change"
            else
              echo "should_build=false" >> $GITHUB_OUTPUT
              echo "Skipping ${{ matrix.service }} - not the triggered service"
            fi
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "Building ${{ matrix.service }} due to manual trigger"
          fi
      
      - name: Checkout
        if: steps.should_build.outputs.should_build == 'true'
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        if: steps.should_build.outputs.should_build == 'true'
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        if: steps.should_build.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        if: steps.should_build.outputs.should_build == 'true' && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Add upstream info to image labels if triggered by upstream
      - name: Set upstream labels
        if: steps.should_build.outputs.should_build == 'true'
        id: upstream
        run: |
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "upstream_sha=${{ github.event.client_payload.upstream_sha }}" >> $GITHUB_OUTPUT
            echo "upstream_repo=${{ github.event.client_payload.upstream_repo }}" >> $GITHUB_OUTPUT
            echo "Building ${{ matrix.service }} due to upstream change in ${{ github.event.client_payload.upstream_repo }}"
          fi
          
      - name: Extract metadata
        if: steps.should_build.outputs.should_build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=upstream-${{ steps.upstream.outputs.upstream_sha }},enable=${{ github.event_name == 'repository_dispatch' }}
          labels: |
            org.opencontainers.image.upstream.sha=${{ steps.upstream.outputs.upstream_sha }}
            org.opencontainers.image.upstream.repo=${{ steps.upstream.outputs.upstream_repo }}
            
      - name: Build and push
        if: steps.should_build.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64,linux/arm/v6
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
